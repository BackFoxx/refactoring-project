language: java
jdk:
  - openjdk11

# 어떤 브랜치에 푸시되었을 때 CI를 진행할 건가요?
branches:
  only:
    - main

before_install:
  - chmod +x gradlew

# 그레이들을 통해 받은 의존성을 캐시에 저장하여, 다음 배포때부터 같은 의존성은 주입받지 않기
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸시되었을 때 수행하는 명령어
script: "./gradlew clean build"

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
  - mv before-deploy/before-deploy.zip deploy/refactoring-project.zip # deploy로 zip파일 이동

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: refactoring-project-build
    region: ap-northeast-2
    skip_cleanup: true
    acl: private
    local_dir: deploy
    wait-until-deployed: true
    on: 
      branch: main

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY
    secret_access_key: $AWS_SECRET_KEY
    bucket: refactoring-project-build
    key: refactoring-project.zip
    bundle_type: zip
    application: refactoring-project
    deployment_group: refactoring-project-group
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 보낼 알람
notifications:
  email:
    recipients:
      - 'jorealbusiness@gmail.com'